name: Build and Release

on:
  workflow_dispatch:

jobs:
  build:
    runs-on: macos-14

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Extract version from Cargo.toml
        id: cargo-version
        run: echo "VERSION=$(grep '^version =' Cargo.toml | sed -E 's/version = \"([^\"]+)\"/\\1/')" >> $GITHUB_ENV

      - name: Build project
        run: cargo build --release --target aarch64-apple-darwin

      - name: Create archive
        run: |
          cd target/aarch64-apple-darwin/release
          tar -czvf secho.tar.gz secho

      - name: Upload release asset
        uses: actions/upload-artifact@v4
        with:
          name: secho
          path: target/aarch64-apple-darwin/release/secho.tar.gz

  create_tag_and_release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Extract version from Cargo.toml
        id: cargo-version
        run: echo "VERSION=$(grep '^version =' Cargo.toml | sed -E 's/version = \"([^\"]+)\"/\\1/')" >> $GITHUB_ENV

      - name: Download build artifact
        uses: actions/download-artifact@v4
        with:
          name: secho
          path: .

      - name: Create GitHub Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ env.VERSION }}
          release_name: Release v${{ env.VERSION }}
          body: |
            Automatic release by GitHub Actions.
          draft: false
          prerelease: false

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ steps.create_release.outputs.upload_url }}
          asset_path: ./secho.tar.gz
          asset_name: secho.tar.gz
          asset_content_type: application/gzip
